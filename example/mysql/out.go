// Code generated by gcgSQL. DO NOT EDIT.
package main

import (
	"database/sql"
)

func addUser(tx *sql.Tx) (sql.Result, error) {
	return tx.Exec("insert into users set name=?string:name")
}

type findUsersWithStruct struct {
	id   int
	name string
}

func findUsersWith(tx *sql.Tx, userId int) ([]*findUsersWithStruct, error) {
	res, err := tx.Query("select id, name from users where id=?", userId)
	if err != nil {
		return nil, err
	}
	retfindUsersWithStruct := make([]*findUsersWithStruct, 0)
	for res.Next() {
		retStructRow := findUsersWithStruct{}
		err = res.Scan(&retStructRow.id, &retStructRow.name)
		if err != nil {
			return nil, err
		}
		retfindUsersWithStruct = append(retfindUsersWithStruct, &retStructRow)
	}
	res.Close()
	return retfindUsersWithStruct, nil
}

type getAllUsersStruct struct {
	id   int
	name string
}

func getAllUsers(tx *sql.Tx) ([]*getAllUsersStruct, error) {
	res, err := tx.Query("select id, name from users")
	if err != nil {
		return nil, err
	}
	retgetAllUsersStruct := make([]*getAllUsersStruct, 0)
	if err != nil {
		return nil, err
	}
	for res.Next() {
		retStructRow := getAllUsersStruct{}
		err = res.Scan(&retStructRow.id, &retStructRow.name)
		if err != nil {
			return nil, err
		}
		retgetAllUsersStruct = append(retgetAllUsersStruct, &retStructRow)
	}
	res.Close()
	return retgetAllUsersStruct, nil
}

type getUserByNameStruct struct {
	name string
	id   int
}

func getUserByName(tx *sql.Tx, name string, altername string) ([]*getUserByNameStruct, error) {
	res, err := tx.Query("select name, id from users where name like ? or name like ?", name, altername)
	if err != nil {
		return nil, err
	}
	retgetUserByNameStruct := make([]*getUserByNameStruct, 0)
	for res.Next() {
		retStructRow := getUserByNameStruct{}
		err = res.Scan(&retStructRow.name, &retStructRow.id)
		if err != nil {
			return nil, err
		}
		retgetUserByNameStruct = append(retgetUserByNameStruct, &retStructRow)
	}
	res.Close()
	return retgetUserByNameStruct, nil
}

func updateUserName(tx *sql.Tx, userId int) (sql.Result, error) {
	return tx.Exec("update users set name=?string:name where id=?")
}
